{"ast":null,"code":"import _toConsumableArray from \"/Users/tim/_Dapp_ex/DappU3_TodoList/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/tim/_Dapp_ex/DappU3_TodoList/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/tim/_Dapp_ex/DappU3_TodoList/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/tim/_Dapp_ex/DappU3_TodoList/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/tim/_Dapp_ex/DappU3_TodoList/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tim/_Dapp_ex/DappU3_TodoList/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/Users/tim/_Dapp_ex/DappU3_TodoList/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/tim/_Dapp_ex/DappU3_TodoList/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tim/_Dapp_ex/DappU3_TodoList/src/components/App.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport icon from '../todo.png';\nimport TodoList from '../abis/TodoList.json';\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context2.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context2.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n                }\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var web3, accounts, networdId, networkData, todoList, taskCount, i, tasks;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                web3 = window.web3; //load accounts, fetch account's ETH balance\n\n                _context3.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context3.sent;\n                this.setState({\n                  account: accounts[0]\n                }); // fetch the '5777' value\n\n                _context3.next = 7;\n                return web3.eth.net.getId();\n\n              case 7:\n                networdId = _context3.sent;\n                // Load TodoList smart contract\n                networkData = TodoList.networks[networdId];\n\n                if (!networkData) {\n                  _context3.next = 27;\n                  break;\n                }\n\n                todoList = new web3.eth.Contract(TodoList.abi, networkData.address);\n                this.setState({\n                  todoList: todoList\n                });\n                _context3.next = 14;\n                return todoList.methods.taskCount().call();\n\n              case 14:\n                taskCount = _context3.sent;\n                this.setState({\n                  taskCount: taskCount.toString()\n                }); // Fetch all existing tasks\n\n                i = 1;\n\n              case 17:\n                if (!(i <= taskCount.toString())) {\n                  _context3.next = 25;\n                  break;\n                }\n\n                _context3.next = 20;\n                return todoList.methods.tasks(i).call();\n\n              case 20:\n                tasks = _context3.sent;\n                this.setState({\n                  tasks: [].concat(_toConsumableArray(this.state.tasks), [tasks])\n                }); //console.log(tasks)\n\n              case 22:\n                i++;\n                _context3.next = 17;\n                break;\n\n              case 25:\n                _context3.next = 28;\n                break;\n\n              case 27:\n                window.alert('TodoList contract not deployed to detected network.');\n\n              case 28:\n                this.setState({\n                  loading: false\n                });\n\n              case 29:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      loading: true,\n      account: '',\n      todoList: {},\n      taskCount: 0,\n      tasks: []\n    }; // this.handleChange = this.handleChange.bind(this);\n    // this.plus = this.plus.bind(this)\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"createTask\",\n    value: function createTask(content) {\n      var _this2 = this;\n\n      this.setState({\n        loading: true\n      });\n      this.state.todoList.methods.createTask(content).send({\n        from: this.state.account\n      }).once('receipt', function (receipt) {\n        _this2.setState({\n          loading: false\n        });\n      });\n    }\n  }, {\n    key: \"toggleCompleted\",\n    value: function toggleCompleted(id) {\n      var _this3 = this;\n\n      this.setState({\n        loading: true\n      });\n      this.state.todoList.methods.toggleCompleted(id).send({\n        from: this.state.account\n      }).once('receipt', function (receipt) {\n        _this3.setState({\n          loading: false\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"nav\", {\n        className: \"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"navbar-brand col-sm-3 col-md-2 mr-0\",\n        href: \"http://google.com/\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"My Todo List\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"navbar-nav px-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: \"nav-item flex-nowrap d-none d-sm-none d-sm-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        className: \"navbar-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Your account: \", this.state.account))))), React.createElement(\"div\", {\n        className: \"container-fluid mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"main\", {\n        role: \"main\",\n        className: \"col-lg-12 d-flex text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"content mr-auto ml-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"http://google.com\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: icon,\n        className: \"App-logo\",\n        alt: \"logo\",\n        width: \"200\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      })), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"My Todo List\"), React.createElement(\"form\", {\n        onSubmit: function onSubmit(event) {\n          event.preventDefault();\n          var input;\n          input = _this4.input.value;\n\n          _this4.createTask(input);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"inputTask\",\n        type: \"text\",\n        placeholder: \"Input a task...\",\n        ref: function ref(input) {\n          _this4.input = input;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      })), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \" \", this.state.loading ? 'True' : 'False', \" \"), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \" All items: \"), React.createElement(\"table\", {\n        id: \"table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, \"#\"), React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \"Content\"), React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \"Completed?\"), React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"Toggle\"))), React.createElement(\"tbody\", {\n        id: \"taskList\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, this.state.tasks.map(function (task, key) {\n        return React.createElement(\"tr\", {\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164\n          },\n          __self: this\n        }, React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165\n          },\n          __self: this\n        }, task.id.toString()), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          },\n          __self: this\n        }, task.content), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          },\n          __self: this\n        }, task.isCompleted ? 'Yes' : 'No'), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          id: task.id,\n          onClick: function onClick(event) {\n            _this4.toggleCompleted(event.target.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169\n          },\n          __self: this\n        }, \"0\")));\n      }))))))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/tim/_Dapp_ex/DappU3_TodoList/src/components/App.js"],"names":["React","Component","Web3","icon","TodoList","App","loadWeb3","loadBlockchainData","window","ethereum","web3","enable","currentProvider","alert","eth","getAccounts","accounts","setState","account","net","getId","networdId","networkData","networks","todoList","Contract","abi","address","methods","taskCount","call","toString","i","tasks","state","loading","props","content","createTask","send","from","once","receipt","id","toggleCompleted","event","preventDefault","input","value","map","task","key","isCompleted","target"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Web3 from 'web3'\nimport icon from '../todo.png';\nimport TodoList from '../abis/TodoList.json'\nimport './App.css';\n\nclass App extends Component {\n\n  async componentDidMount() {\n    await this.loadWeb3()\n    await this.loadBlockchainData()\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    }\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    }\n    else {\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n    }\n  }\n\n  async loadBlockchainData() {\n\n    const web3 = window.web3\n\n    //load accounts, fetch account's ETH balance\n    const accounts = await web3.eth.getAccounts()\n    this.setState({ account: accounts[0] })\n\n    // fetch the '5777' value\n    const networdId = await web3.eth.net.getId()\n\n    // Load TodoList smart contract\n    const networkData = TodoList.networks[networdId]\n    if(networkData){\n      const todoList = new web3.eth.Contract(TodoList.abi, networkData.address)\n      this.setState({ todoList })\n\n      const taskCount = await todoList.methods.taskCount().call()\n      this.setState({ taskCount: taskCount.toString() })\n      \n      // Fetch all existing tasks\n      for(let i=1; i<=taskCount.toString(); i++){\n        const tasks = await todoList.methods.tasks(i).call()\n        this.setState({ tasks: [...this.state.tasks, tasks] })\n        //console.log(tasks)\n      }\n      //console.log(this.state.tasks[0].id.toString(), this.state.tasks[0].content, this.state.tasks[0].isCompleted)\n      //console.log(this.state.tasks[1].id.toString(), this.state.tasks[1].content, this.state.tasks[1].isCompleted)\n\n    }else{\n      window.alert('TodoList contract not deployed to detected network.')\n    }\n\n    this.setState({loading:false})\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      account:'',\n      todoList: {},\n      taskCount: 0,\n      tasks: [],\n    };\n    // this.handleChange = this.handleChange.bind(this);\n    // this.plus = this.plus.bind(this)\n  }\n\n  createTask (content) {\n    this.setState({ loading: true })\n    this.state.todoList.methods.createTask(content).send({ from: this.state.account })\n    .once('receipt', (receipt) => {\n      this.setState({ loading: false })\n    })\n  }\n\n  toggleCompleted (id) {\n    this.setState({ loading: true })\n    this.state.todoList.methods.toggleCompleted(id).send({ from: this.state.account })\n    .once('receipt', (receipt) => {\n      this.setState({ loading: false })\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        \n        <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n          <a\n            className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\n            href=\"http://google.com/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            My Todo List\n          </a>\n\n          <div>\n                <ul className=\"navbar-nav px-3\">\n                    <li className=\"nav-item flex-nowrap d-none d-sm-none d-sm-block\">\n                        <small className=\"navbar-text\">\n                            Your account: {this.state.account}\n                        </small>\n                    </li>\n                </ul>\n\n            </div>\n        </nav>\n\n\n        <div className=\"container-fluid mt-5\">\n          <div className=\"row\">\n            <main role=\"main\" className=\"col-lg-12 d-flex text-center\">\n              <div className=\"content mr-auto ml-auto\">\n                <a\n                  href=\"http://google.com\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <img src={icon} className=\"App-logo\" alt=\"logo\" width=\"200\"/>\n                </a>\n                <h1>My Todo List</h1>\n\n                <form onSubmit={(event) => {\n                    event.preventDefault()\n                    let input\n                    input = this.input.value\n                    this.createTask(input)\n                  }}>\n\n                    <input id=\"inputTask\"\n                        type=\"text\" \n                        placeholder=\"Input a task...\"\n                        ref={(input) => { this.input = input }}\n                    />\n                  <input type=\"submit\" value=\"Submit\" />\n                </form>\n\n                <hr/>\n                \n                <p> {this.state.loading? 'True':'False'} </p>\n                <h2> All items: </h2>\n                <table id=\"table\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">#</th>\n                  <th scope=\"col\">Content</th>\n                  <th scope=\"col\">Completed?</th>\n                  <th scope=\"col\">Toggle</th>\n                </tr>\n              </thead>\n\n               <tbody id=\"taskList\">\n                 {this.state.tasks.map((task, key) => {\n                   return(\n                    <tr key={key}>\n                      <th>{task.id.toString()}</th>\n                      <td>{task.content}</td>\n                      <td>{task.isCompleted? 'Yes':'No'}</td>\n                      <td>\n                        <button\n                          id = {task.id}\n                          onClick = {(event) => {\n                            this.toggleCompleted(event.target.id)\n                          }}\n                        >0</button>\n                      </td>\n                   </tr>\n                   )\n                 })}\n\n                </tbody>\n              </table>\n                \n                \n              </div>\n            </main>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}